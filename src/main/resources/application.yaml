spring:
  application:
    name: demo

  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: false
    properties:
      hibernate:
        generate_statistics: true
    open-in-view: false

  datasource:
    url: jdbc:postgresql://localhost:5432/spring-demo
    username: dev
    password: dev
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
  #    enabled: false
  #    drop-first: true
  jmx:
    enabled: true

  cache:
    cache-names:
      - users
      - i18n
    caffeine:
      spec: maximumSize=1000,expireAfterAccess=1d

  devtools:
    restart:
      exclude: static/**,public/**,META-INF/**,templates/**,git.properties
  web:
    resources:
      cache:
        period: 365d
        cachecontrol:
          max-age: 365d
          no-store: false
          no-cache: false


joinfaces:
  primefaces:
    theme: bootstrap
  faces:
    project-stage: development
    serialize-server-state: true

server:
  port: 8080
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain
  servlet:
    session:
      timeout: 24h
      cookie:
        max-age: 7d
#  tomcat:
#    additional-tld-skip-patterns: "*.jar"
#    basedir: .
#    accesslog:
#      enabled: true
#      pattern: '%t %a "%r" %s (%D ms)'

management:
  info:
    git:
      mode: full
  endpoint:
    health:
      show-details: when_authorized
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    web:
      server:
        max-uri-tags: 100
  prometheus:
    metrics:
      export:
        enabled: true

info:
  name: ${spring.application.name}

logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} [rid=%X{rid} sid=%X{sid} \
user=%X{userName}] %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
  level:
    org:
      apache.tomcat.util.scan.StandardJarScanner: error
      springframework.web:
        filter: debug
      #        servlet.DispatcherServlet: debug
      hibernate:
        engine: warn #info to show session times
        type: info #trace to show binding parameters
        SQL: debug #debug to show generated sql
        stat: debug #debug to show hql query times
    com:
      sun:
        faces: info
      example:
        component:
          RequestIdFilter: warn
          SessionIdFilter: warn
          UserNameFilter: warn
    javax:
      faces: info
  custom:
    time:
      enable: true
    user:
      enable: true
    session:
      enable: true
    request:
      enable: true

#logbook:
#    exclude:
#        - /health
#        - /admin/**
#    filter.enabled: true
#    format.style: http
#    obfuscate:
#        headers:
#            - Authorization
#            - X-Secret
#        parameters:
#            - access_token
#            - password
#    write:
#        category: http.wire-log
#        level: INFO
#        chunk-size: 1000
